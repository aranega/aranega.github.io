@inproceedings{SDL19,
 abstract = {Debugging is one of the most important and time consuming activities in software maintenance, yet mainstream debuggers are not well-adapted to several debugging scenarios. This has led to the research of new techniques covering specific families of complex bugs. Notably, recent research proposes to empower developers with scripting DSLs, plugin-based and moldable debuggers. However, these solutions are tailored to specific use-cases, or too costly for one-time-use scenarios. In this paper we argue that exposing a debugging scripting interface in mainstream debuggers helps in solving many challenging debugging scenarios. For this purpose, we present Sindarin, a scripting API that eases the expression and automation of different strategies developers pursue during their debugging sessions. Sindarin provides a GDB-like API, augmented with AST-bytecode-source code mappings and object-centric capabilities. To demonstrate the versatility of Sindarin, we reproduce several advanced breakpoints and non-trivial debugging mechanisms from the literature.},
 address = {New York, NY, USA},
 author = {Dupriez, Thomas and Polito, Guillermo and Costiou, Steven and Aranega, Vincent and Ducasse, Stéphane},
 booktitle = {Proceedings of the 15th ACM SIGPLAN International Symposium on Dynamic Languages},
 doi = {10.1145/3359619.3359745},
 isbn = {9781450369961},
 keywords = {scripting, Pharo, object centrics, debugging},
 location = {Athens, Greece},
 numpages = {13},
 pages = {67–79},
 publisher = {Association for Computing Machinery},
 series = {DLS 2019},
 title = {Sindarin: A Versatile Scripting API for the Pharo Debugger},
 url = {https://doi.org/10.1145/3359619.3359745},
 year = {2019}
}

