[{"authors":["admin"],"categories":null,"content":"I am currently an Associate Professor at the University of Lille and I\u0026rsquo;m part of the RMoD team led by Stéphane Ducasse. My current research interests are focused on dynamic object-oriented languages and the Pharo language, debugging and interoperability between dynamic languages.\nBefore this position, I was R\u0026amp;D project manager at Axellience, startup created in 2012 by Alexis Muller and editor of the GenMyModel platform. I was conducting research related to Model Driven Engineering and language engineering. More specifically, I was working on heterogeneous model repositories, collaboration, architecture modernization using backward/forward engineering, and MDE scalability in the Cloud.\nFrom 2011 to 2012, I had a one-year position as researcher/lecturer at the University of Technology of Lille 1 (IUT) where I worked with Anne Etien on automatic model transformation chaining using static analysis and product lines. Before that, I obtained a PhD degree from the University of Lille 1 in the DaRT research team at INRIA Lille with Anne Etien and Professor Jean-Luc Dekeyser where I worked on model debugging/profiling and MDE compilation chain debugging, using traceability.\nDuring my \u0026ldquo;young ages\u0026rdquo;, I worked on the relationship between metamodel and UML profile in the MACAO team from the IRIT under the direction of the Professor Christian Percebois. I also briefly worked on formal verification of a Signal to C compiler under supervision of Martin Strecker in the ACADIE team at IRIT.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"authors","summary":"I am currently an Associate Professor at the University of Lille and I\u0026rsquo;m part of the RMoD team led by Stéphane Ducasse. My current research interests are focused on dynamic object-oriented languages and the Pharo language, debugging and interoperability between dynamic languages.","tags":null,"title":"","type":"authors"},{"authors":["Steven Costiou","Vincent Aranega","Marcus Denker"],"categories":[],"content":"","date":1580515200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659133,"objectID":"ea1aaafc37df14be1fc6c593a6b7e31f","permalink":"/publication/programming-20/","publishdate":"2020-11-06T10:38:52.941873Z","relpermalink":"/publication/programming-20/","section":"publication","summary":"","tags":[],"title":"Sub-method, partial behavioral reflection with Reflectivity: Looking back on 10 years of use","type":"publication"},{"authors":["Pierre Misse-Chanabier","Vincent Aranega","Guillermo Polito","Stéphane Ducasse"],"categories":[],"content":"","date":1564617600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659132,"objectID":"3c4d001646e5a70dd981fd2d80aad88a","permalink":"/publication/iwst-19/","publishdate":"2020-11-06T10:38:52.810801Z","relpermalink":"/publication/iwst-19/","section":"publication","summary":"","tags":["\"Transpilation ; Pharo ; C language ; Tools\""],"title":"Illicium A modular transpilation toolchain from Pharo to C","type":"publication"},{"authors":["Thomas Dupriez","Guillermo Polito","Steven Costiou","Vincent Aranega","Stéphane Ducasse"],"categories":[],"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659133,"objectID":"ab0fb8d9cac088a10b09e5e768078648","permalink":"/publication/sdl-19/","publishdate":"2020-11-06T10:38:53.072045Z","relpermalink":"/publication/sdl-19/","section":"publication","summary":"Debugging is one of the most important and time consuming activities in software maintenance, yet mainstream debuggers are not well-adapted to several debugging scenarios. This has led to the research of new techniques covering specific families of complex bugs. Notably, recent research proposes to empower developers with scripting DSLs, plugin-based and moldable debuggers. However, these solutions are tailored to specific use-cases, or too costly for one-time-use scenarios. In this paper we argue that exposing a debugging scripting interface in mainstream debuggers helps in solving many challenging debugging scenarios. For this purpose, we present Sindarin, a scripting API that eases the expression and automation of different strategies developers pursue during their debugging sessions. Sindarin provides a GDB-like API, augmented with AST-bytecode-source code mappings and object-centric capabilities. To demonstrate the versatility of Sindarin, we reproduce several advanced breakpoints and non-trivial debugging mechanisms from the literature.","tags":["\"scripting\"","\"Pharo\"","\"object centrics\"","\"debugging\""],"title":"Sindarin: A Versatile Scripting API for the Pharo Debugger","type":"publication"},{"authors":null,"categories":null,"content":"Since the beginning of my PhD, I\u0026rsquo;m an assistant teacher. I have given courses to the University Lille 1 from 2008 to 2011, the University Institute of Technology of Lille 1 from 2011 to 2012, and since 2012, I teach to Polytech\u0026rsquo;Lille (Engineer School):\n Polytech\u0026rsquo;Lille  Model Driven Engineering Advanced C Programming System Programming Language \u0026amp; Compiler Computer/System Architecture Low-Level Architecture Shell Programming   IUT of Lille:  Computer Architecture/Assembly Programming C Programming Advanced Data Structures Computer Sciences Basics   University of Lille:  Functionnal Programming Operating System Architecture Advanced Database C Programming Programming Langages Paradigmes Metamodeling    Service details (in French)\n","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"322dbaccf72a6d71f827fdb2866be935","permalink":"/teaching/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/teaching/","section":"","summary":"Since the beginning of my PhD, I\u0026rsquo;m an assistant teacher. I have given courses to the University Lille 1 from 2008 to 2011, the University Institute of Technology of Lille 1 from 2011 to 2012, and since 2012, I teach to Polytech\u0026rsquo;Lille (Engineer School):","tags":null,"title":"Teaching","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1475596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1475596800,"objectID":"0ee65d312660fd75a9f998b80062ab80","permalink":"/talk/commitmde-talk/","publishdate":"2016-10-04T16:00:00Z","relpermalink":"/talk/commitmde-talk/","section":"talk","summary":"Collaboration in MDE is a large subject and gathers two main concerns: collaboration with MDE and for MDE. The first one refers to collaboration using MDE tools whereas the second one focuses on creating collaborative MDE tools, i.e: being able to propose a collaborative experience in an MDE tool. When it comes to collaboration for MDE and to modeling tools, we assume that col- laboration could be view as a time related problematic where past, present and future are all important. This talk discusses that last assumption and binds these notions to a concurrency problematic for modeling activities. Either the modifications are concurrent or they are not. In both cases, the theorical point of view is developed as well as more general questions around ergonomy. Using these concepts of con- currency, the talk explains how collaborative modeling is a matter of conducting the present while always keeping track of the past and, somehow, dealing with the future. In order to illustrate as well as possible the different points of view and concepts, the talk will evolve around the GenMyModel collaborative modeling tool. After a brief overview of the platform, we will show how collaboration can mean managing model modifications over time and the effort we put in place in order to offer efficient solutions for concurrent and non-concurrent modifications over a single resource (model). Beside the temporal aspect of collaborative modeling, the presentation will also discuss the performance and the infrastructure choices for the GenMyModel platform, as well as the advantages and drawback of using a cloud-based solution. Finally, I will present work in progress and future work about collaboration on different levels (code against model).","tags":null,"title":"MDE Collaboration: Temporality and Ergonomy in the Cloud, the GenMyModel Solution","type":"talk"},{"authors":["Vincent Aranega","Jean-Marie Mottu","Anne Etien","Thomas Degueule","Benoit Baudry","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"861bfc7c9736187e5f3ab4cf66f569ec","permalink":"/publication/stvr15/","publishdate":"2019-09-19T14:28:05+02:00","relpermalink":"/publication/stvr15/","section":"publication","summary":"","tags":[],"title":"Towards an automation of the mutation analysis dedicated to model transformation","type":"publication"},{"authors":["Vincent Aranega","Antonio Wendell De Oliveira Rodrigues","Anne Etien","Frederic Guyomarch'","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1404172800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1404172800,"objectID":"327be43b0bbfffb0841c0615b47d6165","permalink":"/publication/ijsea14/","publishdate":"2019-09-19T14:09:42+02:00","relpermalink":"/publication/ijsea14/","section":"publication","summary":"","tags":[],"title":"Integrating Profiling into MDE Compilers","type":"publication"},{"authors":["Michel Dirix","Alexis Muller","Vincent Aranega"],"categories":[],"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659721,"objectID":"b0cc40836e10fdd0776d01670a0e3976","permalink":"/publication/ecoop-13/","publishdate":"2020-11-06T10:48:41.68498Z","relpermalink":"/publication/ecoop-13/","section":"publication","summary":"","tags":[],"title":"GenMyModel : An Online UML Case Tool","type":"publication"},{"authors":["Vincent Aranega","Anne Etien","Sébastien Mosser"],"categories":[],"content":"","date":1349049600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659722,"objectID":"21a600caf15cdbdde3687d0b6344195e","permalink":"/publication/models-12/","publishdate":"2020-11-06T10:48:41.93692Z","relpermalink":"/publication/models-12/","section":"publication","summary":"","tags":[],"title":"Using Feature Model to Build Model Transformation Chains","type":"publication"},{"authors":["Anne Etien","Vincent Aranega","Xavier Blanc","Richard F. Paige"],"categories":[],"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659721,"objectID":"775431cd37277d0ae6378449c75783f1","permalink":"/publication/amt-12/","publishdate":"2020-11-06T10:48:41.419796Z","relpermalink":"/publication/amt-12/","section":"publication","summary":"","tags":[],"title":"Chaining Model Transformations","type":"publication"},{"authors":["Antonio Wendell De Oliveira Rodrigues","Vincent Aranega","Anne Etien","Frédéric Guyomarc'H","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1312156800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659722,"objectID":"595262b2accb642cb21466b873a7259a","permalink":"/publication/rr-11/","publishdate":"2020-11-06T10:48:42.442274Z","relpermalink":"/publication/rr-11/","section":"publication","summary":"","tags":[],"title":"Enabling Traceability in an MDE Approach to Improve Performance of GPU Applications","type":"publication"},{"authors":["Vincent Aranega","Jean-Marie Mottu","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1301616000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1301616000,"objectID":"27cb0682ddfa76d63468c5389b68d920","permalink":"/publication/sdt11/","publishdate":"2019-09-19T14:25:35+02:00","relpermalink":"/publication/sdt11/","section":"publication","summary":"","tags":[],"title":"Using Trace to Situate Errors in Model Transformations","type":"publication"},{"authors":["Vincent Aranega","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293840000,"objectID":"6ddacfcdc07582204771c3386c04a1b4","permalink":"/publication/eceasst/","publishdate":"2019-09-19T14:04:23+02:00","relpermalink":"/publication/eceasst/","section":"publication","summary":"","tags":[],"title":"Using an Alternative Trace for QVT","type":"publication"},{"authors":["Vincent Aranega","Jean-Marie Mottu","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1285891200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659722,"objectID":"de334e999ec1092d79e9f625ca8b84a3","permalink":"/publication/modevva-10-b/","publishdate":"2020-11-06T10:48:42.20692Z","relpermalink":"/publication/modevva-10-b/","section":"publication","summary":"","tags":[],"title":"Traceability for Mutation Analysis in Model Transformation","type":"publication"},{"authors":["Vincent Aranega","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1285891200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1285891200,"objectID":"23d36b7ed26620b5f6947aa48fd0a1ea","permalink":"/publication/mpm10/","publishdate":"2019-09-19T14:21:22+02:00","relpermalink":"/publication/mpm10/","section":"publication","summary":"","tags":[],"title":"Using an Alternative Trace for QVT","type":"publication"},{"authors":["Vincent Aranega","Jean-Marie Mottu","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1285891200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659722,"objectID":"cd8a8db52a361391b6de4becee343535","permalink":"/publication/modevva-10/","publishdate":"2020-11-06T10:48:42.063671Z","relpermalink":"/publication/modevva-10/","section":"publication","summary":"","tags":[],"title":"Using Traceability to Enhance Mutation Analysis Dedicated to Model Transformation","type":"publication"},{"authors":["Vincent Aranega","Jean-Marie Mottu","Anne Etien","Jean-Luc Dekeyser"],"categories":[],"content":"","date":1246406400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659721,"objectID":"ade0c572da6e1dc499caf938511c01e8","permalink":"/publication/icsoft-09/","publishdate":"2020-11-06T10:48:41.807821Z","relpermalink":"/publication/icsoft-09/","section":"publication","summary":"","tags":[],"title":"Traceability mechanism for error localization in model transformation","type":"publication"},{"authors":["Xiao Jing","Pierre Pinel","Lei Pi","Vincent Aranega","Claude Baron"],"categories":[],"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604659721,"objectID":"bb2d21a288b3f153623d8379aff00c55","permalink":"/publication/comad-08/","publishdate":"2020-11-06T10:48:41.554233Z","relpermalink":"/publication/comad-08/","section":"publication","summary":"","tags":[],"title":"Modeling Uncertain and Imprecise Information in Process Modeling with UML","type":"publication"},{"authors":null,"categories":null,"content":"Rappel Tout les TPs sont à faire sur UN SEUL repo gitlab. Avant toutes choses, créez un dépôt et ajoutez Anne Etien et Vincent Aranega comme dévelopeurs à votre dépôt. Vous pouvez travaillez en binôme, mais gardez en tête qu’un des TPs sera noté et à faire en temps limité pendant la séance de TP, donc soyez tous à l’aise avec la façon de travailler et surtout, créez bien tous un dépôt pour vous.\n   Pré-requis Dans ce premier TP, vous allez créer des méta-modèles manuellement en utilisant les outils proposés dans Eclipse. Installer les outils de modélisation directement dans une instance d’Eclipse est quelque chose de pénible. Heureusement, il existe des \u0026#34;saveurs\u0026#34; d’Eclipse spéciales avec les outils déjà pré-installés. Dans notre cas, nous allons utiliser la version \u0026#34;Eclipse Modeling Tools\u0026#34;.\n  Téléchargez \u0026#34;Eclipse Modeling Tools\u0026#34; à l’adresse suivante: https://www.eclipse.org/downloads/packages/ et décompressez le.\n     Modélisation du méta-modèle de Java simplifié Dans un premier temps, vous allez modéliser le méta-modèle de Java simplfié que nous avons vu en cours.\n  Assurez-vous que vous avez bien tous les concepts et re-modélisez les sur papier si nécessaire.\n  Une fois Eclipse ouvert, créez un \u0026#34;Ecore Modeling Project\u0026#34; (File→new→Others) et nommez-le simplejava.\n   Vous pouvez remarquez que toute une hiérachie de répertoire et de \u0026#34;configuration\u0026#34; est automatiquement créée. Le projet créé est automatiquement paramétré avec les différentes dépendances nécessaires pour le bon fonctionnement de votre projet de méta-modélisation. Pour l’instant, vous allez uniquement travailler dans le répertoire model généré. Il contient trois fichiers, un .aird, un .ecore et un .genmodel.\n   Le .aird est le fichier avec la représentation graphique de votre méta-modèle.\n  Le .ecore est le fichier contenant la définition de votre méta-modèle.\n  Le .genmodel est le fichier qui servira plus tard à générer le code de votre méta-modèle.\n   Pour ce TP, vous allez uniquement travailler avec le .aird, mais vous allez d’abord vérifier certaines informations sur le .ecore.\n  Déroulez dans l’arbre le .ecore et cliquez sur le package simplejava et vérifiez dans l’onglet Default de la fenêtre Properties que toutes les informations sont bien remplies (préfix, URI et nom). Si elles ne le sont pas, remplissez les en utilisant simplejava comme nom et préfix et http://simplejava/1.0 comme préfix.\n  Ouvrez maintenant le fichier de représentation graphique de votre méta-modèle et modélisez le méta-modèle de Java simplifié (pour modifiez des informations d’élements, vous pouvez le faire dans l’onglet Semantic de la fenêtre de propriétés).\n  Une fois terminé, ouvrez le .ecore (l’éditeur réfléxif générique devrait s’ouvrir) et vérifiez que tous les concepts sont bien présents.\n   Maintenant que votre méta-modèle est créé, pour vérifier que tout \u0026#34;est bon\u0026#34; dans votre méta-modèle, vous allez créer plusieurs modèles conformes. Pour créer des méta-modèles dynamiquement, sans générer de code, vous allez devoir choisir depuis la vue arborescente de votre ecore le concept qui représente la \u0026#34;racine\u0026#34; de votre modèle. Dans un modèle, il faut toujours considérer un conteneur principal qui est le conteneur de tous les éléments de votre modèle (ici, des packages java par exemple).\n  Ouvrez la vue arborescente et sélectionnez votre concept racine, puis faites un clic-droit sur l’élément, puis Create dynamique instances…​. Cela va vous créer un fichier .xmi.\n  Ouvrez le fichier .xmi il devrait s’ouvrir avec l’éditeur générique réflexif (le même que lorsque vous ouvrez directement le .ecore).\n  Créez un premier modèle avec quelques packages et classes.\n  Créez maintenant un autre modèle (clic-droit…​etc) et modélisez un autre modèle conforme au méta-modèle de java simplifié.\n     Modélisation du méta-modèle de système de fichier Pour cet exercice, vous allez créer un nouveau \u0026#34;Ecore Modeling Project\u0026#34; avec le nom \u0026#34;metamodels\u0026#34;. Ce projet servira à mettre tout vos autres méta-modèles (pas uniquement le java simplifié).\n  Créez le nouveau projet\n  Dans le répertoire models, créez un nouveau méta-modèle ecore: File→new→Others→Ecore Model nommé filesystem.ecore, puis ouvez le dans l’éditeur arborescent, sélectionnez le package à l’intérieur, faites clic-droit et New representation→Class Diagram. Cela crée une représentation graphique, mais ne crée pas pour autant de fichier .aird spécial.\n  En cliquant sur le package de votre méta-modèle, entrez les informations suivantes pour le nom, préfix et URI: filesystem, filesystem et http://filesystem/1.0. Vous pouvez rentrer n’importe quel nom et préfix, mais il est toujours mieux d’avoir les mêmes et d’avoir le nom apparaissant dans l’URI (qui, de préférence doit avoir la tête d’une URL).\n  Modélisez votre méta-modèle de système de fichier.\n  Modélisez ensuite quelques modèles instances de ce méta-modèle.\n     Modélisation du méta-modèle de base de données Vous suivrez les mêmes étapes que pour le méta-modèle précédent, créez le dans votre projet metamodels.\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"0536448eb28ae3e4e1f3bcddbf14c83c","permalink":"/courses/metamodelisation/tp1/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/courses/metamodelisation/tp1/","section":"courses","summary":"Rappel Tout les TPs sont à faire sur UN SEUL repo gitlab. Avant toutes choses, créez un dépôt et ajoutez Anne Etien et Vincent Aranega comme dévelopeurs à votre dépôt. Vous pouvez travaillez en binôme, mais gardez en tête qu’un des TPs sera noté et à faire en temps limité pendant la séance de TP, donc soyez tous à l’aise avec la façon de travailler et surtout, créez bien tous un dépôt pour vous.","tags":null,"title":"","type":"courses"}]